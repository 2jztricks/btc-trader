version: '3.8'

services:
  postgres:
    image: timescale/timescaledb:2.13.0-pg14
    environment:
      POSTGRES_DB: trading_bot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - timescaledb-data:/var/lib/postgresql/data
    networks:
      - trading-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d trading_bot"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7
    networks:
      - trading-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  trader-app:
    build:
      context: ..
      dockerfile: ../Dockerfile
    env_file: ../.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trading-net
    volumes:
      - ../:/app
    restart: unless-stopped

  live-tuner:
    build:
      context: ..
      dockerfile: ../Dockerfile
    env_file: ../.env
    command: live-tuner
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - trading-net
    volumes:
      - ../:/app
    restart: unless-stopped

volumes:
  timescaledb-data:

networks:
  trading-net: {}
